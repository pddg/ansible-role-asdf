name: Publish

on:
  workflow_run:
    workflows:
      - Test
    branches:
      - main
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Get current version
        run: |
          echo "ROLE_VERSION=$(cat VERSION)" >> $GITHUB_ENV
      - name: Check the version has already been published
        id: is_published
        continue-on-error: true
        run: |
          if git rev-parse ${ROLE_VERSION} >/dev/null 2>&1; then
            exit 1
          fi
      - name: Add new tag
        if: ${{ steps.is_published.outcome == 'success' }}
        run: |
          git tag ${ROLE_VERSION}
          git push --tags
      - name: Install ansible
        if: ${{ success() }}
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ansible
      - name: Invoke import
        if: ${{ success() }}
        run: |
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} \
            $(echo ${GITHUB_REPOSITORY} | cut -d / -f 1) \
            $(echo ${GITHUB_REPOSITORY} | cut -d / -f 2) \
      - name: Get CHANGELOG
        if: ${{ success() }}
        run: |
          awk -v version=${ROLE_VERSION} -f extract-release.awk CHANGELOG.md > current-CHANGELOG.md
      - name: Create Release
        if: ${{ success() }}
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.ROLE_VERSION }}
          tag_name: ${{ env.ROLE_VERSION }}
          draft: false
          prerelease: false
          body_path: current-CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}
      - name: On skip
        if: ${{ steps.is_published.outcome == 'failure' }}
        run: |
            echo "${ROLE_VERSION} exists. Skip publishing."
